
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_ec2_instance_connect_endpoint.endpoint_db[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_instance_connect_endpoint" "endpoint_db" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m availability_zone     = (known after apply)
      [32m+[0m[0m dns_name              = (known after apply)
      [32m+[0m[0m fips_dns_name         = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m preserve_client_ip    = true
      [32m+[0m[0m region                = "us-east-1"
      [32m+[0m[0m security_group_ids    = [
          [32m+[0m[0m "sg-0d30ac30a7d3d9843",
        ]
      [32m+[0m[0m subnet_id             = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name" = "endpoint-db"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name" = "endpoint-db"
        }
      [32m+[0m[0m vpc_id                = (known after apply)
    }

[1m  # aws_vpc_endpoint.s3[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "s3" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = (known after apply)
      [32m+[0m[0m region                = "us-east-1"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.us-east-1.s3"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpce-s3"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpce-s3"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.sg-alb-frontend.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Acesso p√∫blico HTTP para ALB do Frontend"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-alb-frontend-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-alb-frontend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-alb-frontend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-alb-frontend.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-alb-frontend.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 80
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 80
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-backend.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Permiss√µes de acesso ao backend"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-backend-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-backend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-backend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-backend.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-backend.aws_security_group_rule.egress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-backend.aws_security_group_rule.egress_with_source_security_group_id[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 1515
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1515
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-backend.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = -1
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = -1
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-backend.aws_security_group_rule.ingress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-backend.aws_security_group_rule.ingress_with_source_security_group_id[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 5000
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 5000
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-backend.aws_security_group_rule.ingress_with_source_security_group_id[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 10050
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10050
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-db.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Permiss√µes de acesso ao banco de dados"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-db-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-db"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-db"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-db.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-db.aws_security_group_rule.egress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-db.aws_security_group_rule.ingress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 5432
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 5432
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-db.aws_security_group_rule.ingress_with_source_security_group_id[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 5432
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 5432
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-db.aws_security_group_rule.ingress_with_source_security_group_id[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-db.aws_security_group_rule.ingress_with_source_security_group_id[3][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 10050
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10050
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-frontend.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Permite acesso as portas 80, 443 e SSH para o frontend"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-frontend-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-frontend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-frontend"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-frontend.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-frontend.aws_security_group_rule.egress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-frontend.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 80
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 80
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-frontend.aws_security_group_rule.ingress_with_cidr_blocks[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-frontend.aws_security_group_rule.ingress_with_cidr_blocks[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-frontend.aws_security_group_rule.ingress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 10050
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10050
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-mediador.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Acesso SSH para media√ß√£o das inst√¢ncias privadas"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-mediador-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-mediador"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-mediador"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-mediador.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-mediador.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Grupo para o dashboard de seguran√ßa (Wazuh)"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-security-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-security"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-security"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-security.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_cidr_blocks[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 80
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 80
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_cidr_blocks[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1515
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1515
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1515
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1515
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1515
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1515
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[3][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[4][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-security.aws_security_group_rule.ingress_with_source_security_group_id[5][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_source_security_group_id" {
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 1514
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 1514
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-zabbix.aws_security_group.this_name_prefix[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Permiss√µes de acesso ao servidor Zabbix"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "terraform-sg-zabbix-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "terraform-sg-zabbix"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "terraform-sg-zabbix"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-zabbix.aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Egress Rule"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-zabbix.aws_security_group_rule.ingress_with_cidr_blocks[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 80
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 80
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-zabbix.aws_security_group_rule.ingress_with_cidr_blocks[1][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-zabbix.aws_security_group_rule.ingress_with_cidr_blocks[2][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 10050
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10050
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.sg-zabbix.aws_security_group_rule.ingress_with_cidr_blocks[3][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Ingress Rule"
      [32m+[0m[0m from_port                = 10051
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m region                   = "us-east-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10051
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_network_acl_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m route                  = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
          [32m+[0m[0m update = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-default"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m region   = "us-east-1"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name"       = "projeto_terraform-igw"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name"       = "projeto_terraform-igw"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_nat_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m[0m allocation_id                      = "eipalloc-0430c3225833f3a35"
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "us-east-1"
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name"       = "NAT-gateway-vpc"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"       = "NAT-gateway-vpc"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
    }

[1m  # module.vpc.aws_route.private_nat_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "us-east-1"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "us-east-1"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "us-east-1"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/26"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "us-east-1"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private-us-east-1a"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private-us-east-1a"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.64/26"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "us-east-1"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private-us-east-1b"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-private-us-east-1b"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.0.0/26"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "us-east-1"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public-us-east-1a"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public-us-east-1a"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.0.64/26"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "us-east-1"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public-us-east-1b"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc-public-us-east-1b"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/22"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m region                               = "us-east-1"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"       = "projeto_terraform-vpc"
          [32m+[0m[0m "enviroment" = "study"
          [32m+[0m[0m "project"    = "terraform-final-techack"
        }
    }

[1mPlan:[0m 65 to add, 0 to change, 0 to destroy.
[0m